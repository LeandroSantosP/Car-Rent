// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Category {
  id          String   @id @default(uuid())
  name        String   @unique
  description String
  created_at  DateTime @default(now())
  Car         Car[]

  @@map("categories")
}

model Client {
  id             String    @id @default(uuid())
  name           String
  password       String
  email          String    @unique
  driver_license String
  avatar         String?
  admin          Boolean   @default(false)
  created_at     DateTime  @default(now())
  rantals        Rantals[]

  @@map("clients")
}

model Car {
  id            String   @id @default(uuid())
  name          String
  description   String
  daily_rate    Int
  available     Boolean  @default(true)
  license_plate String   @unique
  fine_amount   Int
  brand         String
  created_at    DateTime @default(now())

  category   Category? @relation(fields: [categoryId], references: [id])
  categoryId String?

  Specification_Cars Specification_Cars[]

  car_image Car_Image[]
  rantals   Rantals[]

  @@map("cars")
}

model Rantals {
  id String @id @default(uuid())

  start_date         DateTime  @default(now())
  expect_return_Date DateTime
  end_date           DateTime?
  total              Int?

  created_at DateTime @default(now())
  updated_at DateTime @updatedAt

  car   Car    @relation(fields: [carId], references: [id])
  carId String

  client   Client @relation(fields: [clientId], references: [id])
  clientId String

  @@map("rantals")
}

model Car_Image {
  id         String   @id @default(uuid())
  image_name String
  created_at DateTime @default(now())

  car   Car?    @relation(fields: [carId], references: [id], onDelete: Cascade)
  carId String?

  @@map("car_images")
}

model Specification {
  id          String   @id @default(uuid())
  name        String
  description String
  created_at  DateTime @default(now())

  Specification_Cars Specification_Cars[]

  @@map("specification")
}

model Specification_Cars {
  specification   Specification @relation(fields: [specificationId], references: [id], onDelete: Cascade)
  specificationId String

  car   Car    @relation(fields: [carId], references: [id], onDelete: Cascade)
  carId String

  @@id([specificationId, carId])
}
